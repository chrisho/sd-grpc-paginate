// Code generated by protoc-gen-go. DO NOT EDIT.
// source: paginate.proto

/*
Package paginate is a generated protocol buffer package.

It is generated from these files:
	paginate.proto

It has these top-level messages:
	PageOptions
	PageResult
*/
package paginate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 分页选项
type PageOptions struct {
	PageSize       int32 `protobuf:"varint,1,opt,name=PageSize" json:"PageSize,omitempty"`
	PageNumber     int32 `protobuf:"varint,2,opt,name=PageNumber" json:"PageNumber,omitempty"`
	CurrPageNumber int32 `protobuf:"varint,6,opt,name=CurrPageNumber" json:"CurrPageNumber,omitempty"`
	// 主键分页模式参数
	SortValue   int64  `protobuf:"varint,3,opt,name=SortValue" json:"SortValue,omitempty"`
	SortField   string `protobuf:"bytes,4,opt,name=SortField" json:"SortField,omitempty"`
	SortFieldTo string `protobuf:"bytes,5,opt,name=SortFieldTo" json:"SortFieldTo,omitempty"`
}

func (m *PageOptions) Reset()                    { *m = PageOptions{} }
func (m *PageOptions) String() string            { return proto.CompactTextString(m) }
func (*PageOptions) ProtoMessage()               {}
func (*PageOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PageOptions) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageOptions) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *PageOptions) GetCurrPageNumber() int32 {
	if m != nil {
		return m.CurrPageNumber
	}
	return 0
}

func (m *PageOptions) GetSortValue() int64 {
	if m != nil {
		return m.SortValue
	}
	return 0
}

func (m *PageOptions) GetSortField() string {
	if m != nil {
		return m.SortField
	}
	return ""
}

func (m *PageOptions) GetSortFieldTo() string {
	if m != nil {
		return m.SortFieldTo
	}
	return ""
}

// 分页结果
type PageResult struct {
	TotalRecords int32 `protobuf:"varint,1,opt,name=TotalRecords" json:"TotalRecords,omitempty"`
	TotalPages   int32 `protobuf:"varint,2,opt,name=TotalPages" json:"TotalPages,omitempty"`
	PageSize     int32 `protobuf:"varint,3,opt,name=PageSize" json:"PageSize,omitempty"`
	PageNumber   int32 `protobuf:"varint,4,opt,name=PageNumber" json:"PageNumber,omitempty"`
	SortValue    int64 `protobuf:"varint,5,opt,name=SortValue" json:"SortValue,omitempty"`
}

func (m *PageResult) Reset()                    { *m = PageResult{} }
func (m *PageResult) String() string            { return proto.CompactTextString(m) }
func (*PageResult) ProtoMessage()               {}
func (*PageResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PageResult) GetTotalRecords() int32 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

func (m *PageResult) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *PageResult) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageResult) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *PageResult) GetSortValue() int64 {
	if m != nil {
		return m.SortValue
	}
	return 0
}

func init() {
	proto.RegisterType((*PageOptions)(nil), "paginate.PageOptions")
	proto.RegisterType((*PageResult)(nil), "paginate.PageResult")
}

func init() { proto.RegisterFile("paginate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x48, 0x4c, 0xcf,
	0xcc, 0x4b, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xce,
	0x33, 0x72, 0x71, 0x07, 0x24, 0xa6, 0xa7, 0xfa, 0x17, 0x94, 0x64, 0xe6, 0xe7, 0x15, 0x0b, 0x49,
	0x71, 0x71, 0x80, 0xb8, 0xc1, 0x99, 0x55, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x70,
	0xbe, 0x90, 0x1c, 0x17, 0x17, 0x88, 0xed, 0x57, 0x9a, 0x9b, 0x94, 0x5a, 0x24, 0xc1, 0x04, 0x96,
	0x45, 0x12, 0x11, 0x52, 0xe3, 0xe2, 0x73, 0x2e, 0x2d, 0x2a, 0x42, 0x52, 0xc3, 0x06, 0x56, 0x83,
	0x26, 0x2a, 0x24, 0xc3, 0xc5, 0x19, 0x9c, 0x5f, 0x54, 0x12, 0x96, 0x98, 0x53, 0x9a, 0x2a, 0xc1,
	0xac, 0xc0, 0xa8, 0xc1, 0x1c, 0x84, 0x10, 0x80, 0xc9, 0xba, 0x65, 0xa6, 0xe6, 0xa4, 0x48, 0xb0,
	0x28, 0x30, 0x6a, 0x70, 0x06, 0x21, 0x04, 0x84, 0x14, 0xb8, 0xb8, 0xe1, 0x9c, 0x90, 0x7c, 0x09,
	0x56, 0xb0, 0x3c, 0xb2, 0x90, 0xd2, 0x2a, 0x46, 0x88, 0x33, 0x83, 0x52, 0x8b, 0x4b, 0x73, 0x4a,
	0x84, 0x94, 0xb8, 0x78, 0x42, 0xf2, 0x4b, 0x12, 0x73, 0x82, 0x52, 0x93, 0xf3, 0x8b, 0x52, 0x8a,
	0xa1, 0x9e, 0x42, 0x11, 0x03, 0x79, 0x0c, 0xcc, 0x07, 0x69, 0x2b, 0x86, 0x79, 0x0c, 0x21, 0x82,
	0x12, 0x28, 0xcc, 0x78, 0x03, 0x85, 0x05, 0x23, 0x50, 0x50, 0x3c, 0xcb, 0x8a, 0xe6, 0xd9, 0x24,
	0x36, 0x70, 0x7c, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x38, 0x6b, 0xd9, 0xa1, 0x01,
	0x00, 0x00,
}
